{"mappings":"AAAA;AAEA,MAAM,kBAAkB,SAAS,aAAa,CAAC;AAC/C,MAAM,YAAY,SAAS,gBAAgB,CAAC;AAE5C,MAAM,iBAAiB,EAAE;AAEzB,SAAS;IACP,KAAK,MAAM,YAAY,UAAW;QAChC,MAAM,mBAAmB,SAAS,WAAW;QAC7C,MAAM,oBAAoB,SAAS,OAAO,CAAC,QAAQ;QACnD,MAAM,iBAAiB,SAAS,OAAO,CAAC,MAAM;QAC9C,MAAM,cAAc,SAAS,OAAO,CAAC,GAAG;QAExC,eAAe,IAAI,CAAC;YAClB,MAAM;YACN,UAAU;YACV,QAAQ;YACR,KAAK;QACP;IACF;AACF;AAEA,SAAS,UAAU,cAAc;IAC/B,OAAO,CAAC,eAAe,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,IAAI,CAAC;AAClD;AAEA,SAAS;IACP;WAAI;KAAU,CAAC,IAAI,CAAC,CAAC,OAAO,SAC1B,UAAU,OAAO,OAAO,CAAC,MAAM,IAAI,UAAU,MAAM,OAAO,CAAC,MAAM,GAChE,OAAO,CAAC,CAAA,WAAY,gBAAgB,MAAM,CAAC;AAChD;AAEA;AACA","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst listOfEmployees = document.querySelector('ul');\nconst employees = document.querySelectorAll('li');\n\nconst employeesArray = [];\n\nfunction getEmployees() {\n  for (const employee of employees) {\n    const employeeFullName = employee.textContent;\n    const employeePositiion = employee.dataset.position;\n    const employeeSalary = employee.dataset.salary;\n    const employeeAge = employee.dataset.age;\n\n    employeesArray.push({\n      name: employeeFullName,\n      position: employeePositiion,\n      salary: employeeSalary,\n      age: employeeAge,\n    });\n  }\n}\n\nfunction getSalary(employeeSalary) {\n  return +employeeSalary.slice(1).split(',').join('');\n}\n\nfunction sortEmployees() {\n  [...employees].sort((first, second) =>\n    getSalary(second.dataset.salary) - getSalary(first.dataset.salary))\n    .forEach(employee => listOfEmployees.append(employee));\n};\n\ngetEmployees();\nsortEmployees();\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}